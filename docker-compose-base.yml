version: '3'

services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus-anomaly
    hostname: prometheus
    restart: unless-stopped
    volumes:
      - ./prom/config/:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    networks:
      - metrics

  grafana:
    image: grafana/grafana
    container_name: grafana-anomaly
    hostname: grafana
    environment:
      -  GF_SECURITY_ADMIN_PASSWORD=kailima
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - metrics

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-anomaly
    hostname: rabbitmq
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - metrics
  
  db:
    image: postgres:13-alpine
    container_name: postgres-anomaly
    environment:
      - POSTGRES_DB=fastapi_celery
      - POSTGRES_USER=fastapi_celery
      - POSTGRES_PASSWORD=fastapi_celery
    networks:
      - metrics
  
  flower:
    image: mher/flower
    container_name: flower-anomaly
    command: ["flower", "--broker=amqp://guest:guest@localhost", "--port=5555"]
    ports:
      - "5555:5555"
    depends_on:
      - rabbitmq
    networks:
      - metrics
  
  fastapi:
    build:
      context: .
      dockerfile: DockerfileFastAPI
    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq
    networks:
      - metrics

  worker:
    build:
      dockerfile: DockerfileCelery
      context: .
    depends_on:
      - rabbitmq
    networks:
      - metrics
  

networks:
  metrics:
    driver: bridge